// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model Router {
  id              Int          @id @default(autoincrement())
  name            String
  rule            String?
  service         Service?     @relation(fields: [serviceId], references: [id])
  serviceId       Int?
  tlsCertResolver String?
  entryPoints     EntryPoint[] // Many-to-many relationship
}

model Service {
  id           Int      @id @default(autoincrement())
  name         String
  loadbalancer Json[]
  routers      Router[]
}

enum MiddlewareType {
  HTTP
  TCP
}

enum MiddlewareName {
  AddPrefix
  BasicAuth
  Buffering
  Chain
  CircuitBreaker
  Compress
  ContentType
  DigestAuth
  Errors
  ForwardAuth
  Headers
  IpWhitelist
  InFlightReq
  PassTLSClientCert
  RateLimit
  RedirectRegex
  RedirectScheme
  ReplacePath
  ReplacePathRegex
  Retry
  StripPrefix
  StripPrefixRegex
}

model MiddlewareList {
  id             Int              @id @default(autoincrement())
  middlewareName MiddlewareName[]
  middleware     Middleware       @relation(fields: [middlewareId], references: [id])
  middlewareId   Int
}

model Middleware {
  id             Int              @id @default(autoincrement())
  name           String
  type           MiddlewareType
  MiddlewareList MiddlewareList[]
}

model CertificatesResolver {
  id                          Int     @id @default(autoincrement())
  acmeEmail                   String
  acmeStorage                 String?
  acmeHTTPChallengeEntryPoint String?
}

model EntryPoint {
  id      Int      @id @default(autoincrement())
  name    String
  address String?
  routers Router[] // Many-to-many relationship
}
